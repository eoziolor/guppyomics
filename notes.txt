Guppy Omics (EO)
===

###### tags: `research`

Jan 10, 2019
===

Downloading the data from Novogene.

```{bash}
srun -t 24:00:00 -n 8 --mem 60000 --pty /bin/bash
mkdir guppy
cd guppy
mkdir raw
cd raw
wget -r --user="P202SC18122141-01_20181210_AegNaW" --password="lGlLQf" ftp://hwftp.novogene.com/
```

Downloading genome for _Poecilia reticulata_ from NCBI.

```{bash}
cd ~/guppy/data
mkdir genome
cd genome
wget ftp://ftp.ncbi.nlm.nih.gov/genomes/all/GCF/000/633/615/GCF_000633615.1_Guppy_female_1.0_MT/GCF_000633615.1_Guppy_female_1.0_MT_genomic.fna.gz
```

Downloading the annotation of that genome.

```{bash}
wget ftp://ftp.ncbi.nlm.nih.gov/genomes/all/GCF/000/633/615/GCF_000633615.1_Guppy_female_1.0_MT/GCF_000633615.1_Guppy_female_1.0_MT_genomic.gff.gz
```

Renaming for ease.

```{bash}
mv GCF_000633615.1_Guppy_female_1.0_MT_genomic.fna.gz preticulata.fna.gz
mv GCF_000633615.1_Guppy_female_1.0_MT_genomic.gff.gz preticulata.gff.gz
```

Indexing genomes
```{bash}
zcat preticulata.fna.gz > preticulata.fna
bwa index preticulata.fna
samtools faidx preticulata.fna
```

# Jan 13, 2019

## Initial data

* Downloaded all data from Novogene with code from Jan 10, 2019.

* Now time to figure out how to rename based on the sheet that Novogene provided
	* Downloading list to farm

```{bash}
scp -P 2022 ~/Documents/UCD/Projects/guppy_omics/samples_seq/sample_name_list.txt farm:/home/eoziolor/guppy/data/list/
```
* Checking md5sum as provided by Novogene

```{bash}
#!/bin/bash
my_dir=/home/eoziolor/guppy/data/raw/hwftp.novogene.com/C202SC18122141/raw_data
cd $my_dir
touch check_md5

for folder in $(ls)
do cd $folder
cat MD5.txt | md5sum -c - >> ../check_md5
cd ..
done
```

## Renaming samples to true name

* Gotta be very careful with this step as we can falsely name things. 
	* I will use ln -s to true names
	* This way we won't lose the true names
* Convert list to unix format to avoid carriage

```{bash}
dos2unix sample_name_list.txt 
```

```{bash}
#!/bin/bash/
my_dir=/home/eoziolor/guppy/data/raw/hwftp.novogene.com/C202SC18122141/raw_data
my_list=/home/eoziolor/guppy/data/list/sample_name_list.txt
my_renamed=/home/eoziolor/guppy/data/raw/renamed

cd $my_dir

for folder in $(ls)
do cd $folder
	for file in $(ls)
	do
	match=$(echo $file | sed -e "s/AWCSU0[0-9]*_//g" | sed -e "s/_H.*//g")
	new=$(cat $my_list | grep "$match" | awk '{print $2}')
	end=$(echo $file | sed 's/.*\(.......\)/\1/')
	ln -s $my_dir/$folder/$file $my_renamed/$new\_$end
	done
done
```

* and their list is wrong...!

```
#test
my_dir=/home/eoziolor/guppy/data/raw/hwftp.novogene.com/C202SC18122141/raw_data
my_list=/home/eoziolor/guppy/data/list/index.txt
my_renamed=/home/eoziolor/guppy/data/raw/renamed


	match=$(echo AWCSU01_USPD16092569-N712-AK428_HW2M2CCXY_L6_2.fq.gz | sed -e "s/AWCSU0[0-9]*_//g" | sed -e "s/_H.*//g")
	new=$(cat $my_list | grep "$match" | awk '{print $2}' | sed "s/'\r'//g")
	end=$(echo AWCSU01_USPD16092569-N712-AK428_HW2M2CCXY_L6_2.fq.gz | sed 's/.*\(.......\)/\1/')
	echo $new
	echo $my_renamed/$new\_$end
	ln -s $my_dir/$folder/AWCSU01_USPD16092569-N712-AK428_HW2M2CCXY_L6_2.fq.gz $my_renamed/$new\.fq.gz
```

Jan 15, 2019
===

## Renaming

* Received an updated list of sample names from Novogene. Let's convert it to unix format (remove carriage) and give it another go.

```{bash}
dos2unix index.txt
```

* Now for converting names

```{bash}
#!/bin/bash/
dirs=/home/eoziolor/guppy/data/raw/hwftp.novogene.com/C202SC18122141/raw_data/AWCSU*
my_list=/home/eoziolor/guppy/data/list/index.txt
my_renamed=/home/eoziolor/guppy/data/raw/renamed

for folder in $dirs
do cd $folder
for file in $(ls AWCSU*)
	do
	match=$(echo $file | sed -e "s/AWCSU0[0-9]*_//g" | sed -e "s/_H.*//g")
	new=$(cat $my_list | grep "$match" | awk '{print $2}')
	end=$(echo $file | sed 's/.*\(.......\)/\1/')
	ln -s $folder/$file $my_renamed/$new\_$end
	done
done
```

* This seems to work just fine!

## Checking on empty files

* We included the empty files as a double check for sequencing success

```{bash}
dir=/home/eoziolor/guppy/data/raw/renamed
cd $dir
rm ../sizes.txt
touch ../sizes.txt

for file in $(ls *_b_*)
do
	stat -Lc %s $file >> ../sizes.txt
done
```

* And for the true files

```{bash}
dir=/home/eoziolor/guppy/data/raw/renamed
cd $dir
echo "Real samples" >> ../sizes.txt

for file in $(ls -I "*_b_*")
do
	stat -Lc %s $file >> ../sizes.txt
done
```

* it seems like none of the empty *_b_* wells has any sample in it. We can remove the soft links to them and proceed.

```{bash}
dir=/home/eoziolor/guppy/data/raw/renamed
cd $dir
rm *_b_*
```

## Running FastQC on samples

```{bash}
#!/bin/bash

#SBATCH -J gp_fastqc
#SBATCH --array=1-384
#SBATCH -e gp_fastqc%A-%a.o
#SBATCH -o gp_fastqc%A-%a.o
#SBATCH -N 1
#SBATCH -n 1
#SBATCH -t 03:00:00
#SBATCH --mem=8000
#SBATCH --no-requeue
#SBASTCH -p med

module load bio3
fastqc --version

#folder
my_dir=/home/eoziolor/guppy/data/raw/renamed
my_out=/home/eoziolor/guppy/data/fastqc/
cd $my_dir

if (($SLURM_ARRAY_TASK_ID < 10))
then
	num=00$(echo $SLURM_ARRAY_TASK_ID)
elif (($SLURM_ARRAY_TASK_ID < 100))
then
	num=0$(echo $SLURM_ARRAY_TASK_ID)
else
	num=$(echo $SLURM_ARRAY_TASK_ID)
fi

echo $num

#code
cd $my_dir
fastqc AWCSU*_$num\_*\.fq.gz \
-o $my_out
```

* This is timing out for a bunch of samples so I will run with greater time

## Running MultiQC

```{bash}
module load bio3
conda create --name guppy python=2.7
source activate guppy
conda install -c bioconda multiqc

# run in folder with fastqc files

multiqc .
```

## Manual QC

* Several samples show very low coverage. I want to remove the ones below a certain threshold.


```{bash}
dir=/home/eoziolor/guppy/data/raw/renamed
cd $dir
touch ../fail_name.txt
touch ../fail_size.txt

for file in $(ls)
do
	echo $file >> ../fail_name.txt
done

for file in $(ls)
do
	stat -Lc %s $file >> ../fail_size.txt
done

paste ../fail_name.txt ../fail_size.txt > ../fails.txt
rm ../fail_name.txt ../fail_size.txt
```

* Choosing to remove files with less than 100 Mb data

```{bash}
cat ../fails.txt | awk '{OFS="\t"}{if($2<100000000){print $1}}' | xargs rm
```
* Checking that those were removed

```{bash}
dir=/home/eoziolor/guppy/data/raw/renamed
cd $dir
touch ../fail_name.txt
touch ../fail_size.txt

for file in $(ls)
do
	echo $file >> ../fail_name.txt
done

for file in $(ls)
do
	stat -Lc %s $file >> ../fail_size.txt
done

paste ../fail_name.txt ../fail_size.txt > ../fails_post.txt
rm ../fail_name.txt ../fail_size.txt
```

## Trimming

* Using cutadapt and will do fastqc afterwards.
* Won't use trimmomatic so that I can use a pipeline with cutadapt after and not have to keep the trimmer reads (if everything went well)

```{bash}
#!/bin/bash -l

#SBATCH -J trim
#SBATCH --array=1-384
#SBATCH -e trim%A-%a.o
#SBATCH -o trim%A-%a.o
#SBATCH -N 1
#SBATCH -n 8
#SBATCH -t 01-00:00
#SBATCH --mem=8000

module load bio3

#Assigning number to be able to get into each folder separately

if (($SLURM_ARRAY_TASK_ID < 10))
then
	num=00$(echo $SLURM_ARRAY_TASK_ID)
elif (($SLURM_ARRAY_TASK_ID < 100))
then
	num=0$(echo $SLURM_ARRAY_TASK_ID)
else
	num=$(echo $SLURM_ARRAY_TASK_ID)
fi

echo $num

#Directory and file assignment for each file and program
my_dir=/home/eoziolor/guppy/data/raw/renamed
fq1=$my_dir/AWCSU*$num*1.fq.gz
fq2=$my_dir/AWCSU*$num*2.fq.gz
my_bwa=/home/eoziolor/program/bwa-0.7.17/bwa
my_sbl=/home/eoziolor/program/samblaster/samblaster
my_sam=/home/eoziolor/program/samtools-1.9/samtools
my_out=/home/eoziolor/guppy/data/trim/
my_gen=/home/eoziolor/guppy/data/genome/preticulata.fna


#Code
paste <(zcat $fq1 | paste - - - -) \
      <(zcat $fq2 | paste - - - -) |\
tr '\t' '\n' |\
cutadapt -j 8 --interleaved -a CTGTCTCTTATA -A CTGTCTCTTATA -u 10 -U 10 -q 30 --trim-n --minimum-length 36 - | gzip > $my_out/AWCSU.$num.fq.gz
```

* Three of the samples are running really slow
* Re-running trimming on Sample 110 since I think the node is crap.
* Running them together with 111 (empty file), so that I can still submit an array.

```{bash}
#!/bin/bash -l

#SBATCH -J trim
#SBATCH --array=110-111
#SBATCH -e trim%A-%a.o
#SBATCH -o trim%A-%a.o
#SBATCH -N 1
#SBATCH -n 8
#SBATCH -t 01-00:00
#SBATCH --mem=8000

module load bio3

#Assigning number to be able to get into each folder separately

if (($SLURM_ARRAY_TASK_ID < 10))
then
	num=00$(echo $SLURM_ARRAY_TASK_ID)
elif (($SLURM_ARRAY_TASK_ID < 100))
then
	num=0$(echo $SLURM_ARRAY_TASK_ID)
else
	num=$(echo $SLURM_ARRAY_TASK_ID)
fi

echo $num

#Directory and file assignment for each file and program
my_dir=/home/eoziolor/guppy/data/raw/renamed
fq1=$my_dir/AWCSU*$num*1.fq.gz
fq2=$my_dir/AWCSU*$num*2.fq.gz
my_bwa=/home/eoziolor/program/bwa-0.7.17/bwa
my_sbl=/home/eoziolor/program/samblaster/samblaster
my_sam=/home/eoziolor/program/samtools-1.9/samtools
my_out=/home/eoziolor/guppy/data/trim/
my_gen=/home/eoziolor/guppy/data/genome/preticulata.fna


#Code
paste <(zcat $fq1 | paste - - - -) \
      <(zcat $fq2 | paste - - - -) |\
tr '\t' '\n' |\
cutadapt -j 8 --interleaved -a CTGTCTCTTATA -A CTGTCTCTTATA -u 10 -U 10 -q 30 --trim-n --minimum-length 36 - | gzip > $my_out/AWCSU.$num.fq.gz
```

Jan 16, 2019
===

## FastQC on trimmed samples

```{bash}
#!/bin/bash

#SBATCH -J post_fastqc
#SBATCH --array=1-384
#SBATCH -e post_fastqc%A-%a.o
#SBATCH -o post_fastqc%A-%a.o
#SBATCH -N 1
#SBATCH -n 8
#SBATCH -t 1-00:00
#SBATCH --mem=16000
#SBATCH --no-requeue
#SBASTCH -p med

module load bio3
fastqc --version

#folder
my_dir=/home/eoziolor/guppy/data/trim
my_out=/home/eoziolor/guppy/data/fastqc/post
cd $my_dir

if (($SLURM_ARRAY_TASK_ID < 10))
then
	num=00$(echo $SLURM_ARRAY_TASK_ID)
elif (($SLURM_ARRAY_TASK_ID < 100))
then
	num=0$(echo $SLURM_ARRAY_TASK_ID)
else
	num=$(echo $SLURM_ARRAY_TASK_ID)
fi

echo $num

#code
cd $my_dir
fastqc -t 8 AWCSU*_$num\_*\.fq.gz \
-o $my_out
```

* Hopefully today I can map

## Mapping
```{bash}
#!/bin/bash -l

#SBATCH -J combo_trimalign
#SBATCH --array=1-10
#SBATCH -e combo_trimalign%A-%a.o
#SBATCH -o combo_trimalign%A-%a.o
#SBATCH -N 1
#SBATCH -n 8
#SBATCH -t 01-00:00
#SBATCH --mem=8000

module load bio3

#Assigning number to be able to get into each folder separately

if (($SLURM_ARRAY_TASK_ID < 10))
then
	num=00$(echo $SLURM_ARRAY_TASK_ID)
elif (($SLURM_ARRAY_TASK_ID < 100))
then
	num=0$(echo $SLURM_ARRAY_TASK_ID)
else
	num=$(echo $SLURM_ARRAY_TASK_ID)
fi

echo $num

#Assigning new sample numbers with same amount of digits
if (($SLURM_ARRAY_TASK_ID < 10))
then
        sample=000$(echo $SLURM_ARRAY_TASK_ID)
elif (($SLURM_ARRAY_TASK_ID < 100))
then
        sample=00$(echo $SLURM_ARRAY_TASK_ID)
elif (($SLURM_ARRAY_TASK_ID <1000))
then
	sample=0$(echo $SLURM_ARRAY_TASK_ID)
else
        sample=$(echo $SLURM_ARRAY_TASK_ID)
fi


#Directory and file assignment for each file and program
my_dir=/home/eoziolor/phpopg/data/128.120.88.242/raw_data
fq1=$my_dir/AWPH*$num/*1.fq.gz
fq2=$my_dir/AWPH*$num/*2.fq.gz
my_bwa=/home/eoziolor/program/bwa-0.7.17/bwa
my_sbl=/home/eoziolor/program/samblaster/samblaster
my_sam=/home/eoziolor/program/samtools-1.9/samtools
my_out=/home/eoziolor/phpopg/data/align/
my_gen=/home/eoziolor/phgenome/data/genome/phgenome_masked.fasta
my_list=/home/eoziolor/phpopg/data/list/zeros_samples.tsv

#others
pop=$(cat $my_list | grep $sample | cut -f 2)
rg=$(echo \@RG\\tID:$sample\\tPL:Illumina\\tPU:x\\tLB:combined\\tSM:$sample.$pop)
outroot=$sample\_$pop

#Code
paste <(zcat $fq1 | paste - - - -) \
      <(zcat $fq2 | paste - - - -) |\
tr '\t' '\n' |\
cutadapt -j 8 --interleaved -a CTGTCTCTTATA -A CTGTCTCTTATA -u 10 -U 10 -q 30 --trim-n --minimum-length 36 - |\
$my_bwa mem $my_gen -p -R $rg -t 2 - |\
$my_sam view -S -h -u - | \
$my_sam sort -T $my_out/$outroot > $my_out/$outroot
```
